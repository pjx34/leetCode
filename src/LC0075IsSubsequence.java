//给定字符串 s 和 t ，判断 s 是否为 t 的子序列。
//
//字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。
//
//进阶：
//
//如果有大量输入的 S，称作 S1, S2, ... , Sk 其中 k >= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？
//
//示例 1：
//
//输入：s = "abc", t = "ahbgdc"
//输出：true
public class LC0075IsSubsequence {

     public static boolean isSubsequence(String s, String t) {
        if (t.length()<s.length())
            return false;
        if (s.length()==0)
            return true;
        int p1 = 0;
        int p2 = 0;
        while (p1<s.length()&&p2<t.length()){
            if (s.charAt(p1) == t.charAt(p2)){
                p1++;
            }
            p2++;
        }
        return p1 == s.length();
    }

    public static void main(String[] args) {
        System.out.println(isSubsequence("b", "abc"));
    }

}
