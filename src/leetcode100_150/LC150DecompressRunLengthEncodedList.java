package leetcode100_150;

import com.sun.xml.internal.ws.api.model.wsdl.WSDLOutput;

import java.util.ArrayList;

//给你一个以行程长度编码压缩的整数列表?nums?。
//考虑每对相邻的两个元素 [freq, val] = [nums[2*i], nums[2*i+1]]?（其中?i >= 0?），每一对都表示解压后子列表中有 freq?个值为?val?的元素，你需要从左到右连接所有子列表以生成解压后的列表。
//请你返回解压后的列表。
//示例 1：
//输入：nums = [1,2,3,4]
//输出：[2,4,4,4]
//解释：第一对 [1,2] 代表着 2 的出现频次为 1，所以生成数组 [2]。
//第二对 [3,4] 代表着 4 的出现频次为 3，所以生成数组 [4,4,4]。
//最后将它们串联到一起 [2] + [4,4,4] = [2,4,4,4]。
public class LC150DecompressRunLengthEncodedList {
    public static int[] decompressRLElist(int[] nums) {
        ArrayList<Integer> list = new ArrayList<>();
        for (int i = 0; i+1 < nums.length; i+=2) {
                int a = nums[i+1];
                for (int j = 0; j < nums[i]; j++) {
                    list.add(a);
                }
        }
        int[] ints = new int[list.size()];
        for (int i = 0; i < ints.length; i++) {
            ints[i] = list.get(i);
        }
        return ints;
    }

    public static void main(String[] args) {
        int[] ints = {1,2,3,4};
        int[] ints1 = decompressRLElist(ints);
        for (int i : ints1) {
            System.out.println(i);
        }
    }
}
