package leetcode201_250;

import java.util.Arrays;

//
//环形公交路线上有 n 个站，按次序从 0 到 n - 1 进行编号。我们已知每一对相邻公交站之间的距离，distance[i] 表示编号为 i 的车站和编号为 (i + 1) % n 的车站之间的距离。
//        环线上的公交车都可以按顺时针和逆时针的方向行驶。
//        返回乘客从出发点 start 到目的地 destination 之间的最短距离。
//        示例 1：
//        输入：distance = [1,2,3,4], start = 0, destination = 1
//        输出：1
//        解释：公交站 0 和 1 之间的距离是 1 或 9，最小值是 1。
public class LC0212DistanceBetweenBusStops {
    public int distanceBetweenBusStops(int[] distance, int start, int destination) {
        int min = Math.min(start,destination);
        int max = Math.max(start,destination);
        int sum = 0;
        int sum1 = Arrays.stream(distance).sum();
        for (int i = min,j = max; i < max ; i++) {
            sum += distance[i];
        }
        return Math.min(sum,sum1-sum);
    }
}
